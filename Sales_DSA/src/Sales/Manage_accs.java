/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sales;

import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eryl
 */
public class Manage_accs extends javax.swing.JFrame {

    /**
     * Creates new form Manage_accs
     */
    public Manage_accs() {
        initComponents();
        jTable1.setAutoCreateRowSorter(true);
        jPanel1.setBackground(new Color(0,0,0,200));
        jPanel2.setBackground(new Color(0,0,0,200));
    }
    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        untxt = new javax.swing.JTextField();
        passtxt = new javax.swing.JTextField();
        idtxt2 = new javax.swing.JTextField();
        untxt2 = new javax.swing.JTextField();
        passtxt2 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton11 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        search2 = new javax.swing.JTextField();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Admin Accounts:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Staff Accounts:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 340, 120, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, 120, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 330, -1, -1));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 400, 120, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Username");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 550, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 590, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 500, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Username");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 550, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Password");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 590, -1, -1));

        idtxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(idtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 510, 169, 30));

        untxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(untxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 550, 299, 30));

        passtxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(passtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 590, 299, 30));

        idtxt2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(idtxt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 500, 186, -1));

        untxt2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(untxt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 540, 302, -1));

        passtxt2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(passtxt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 580, 302, -1));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 650, -1, -1));

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 650, -1, -1));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jButton7.setText("Delete");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 650, -1, -1));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton8.setText("Save");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 640, -1, -1));

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        jButton9.setText("Update");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 640, -1, -1));

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jButton10.setText("Delete");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 640, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Sort by:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 230, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Sort by:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 230, -1, -1));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "ID", "Username" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 120, 40));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "ID", "Username" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 270, 120, 40));

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jButton11.setText("Back");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 720, 158, 61));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, -1, -1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 450, 200));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 490, 450, 200));

        search.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        search.setForeground(new java.awt.Color(153, 153, 153));
        search.setText("Search Username");
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 190, 50));

        search2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        search2.setForeground(new java.awt.Color(153, 153, 153));
        search2.setText("Search Username");
        search2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                search2FocusGained(evt);
            }
        });
        search2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search2KeyPressed(evt);
            }
        });
        getContentPane().add(search2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 170, 190, 50));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ACCOUNT MANAGER.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 820));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            Statement st = con.createStatement();
            String query = "select * from adminlogin";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            st.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTable2.setModel(new DefaultTableModel());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            Statement st = con.createStatement();
            String query = "select * from stafflogin";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            st.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel());
        idtxt.setText("");
        untxt.setText("");
        passtxt.setText("");
        search.setText("Search Username");
        search.setForeground(new Color(153,153,153));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTable2.setModel(new DefaultTableModel());
        idtxt2.setText("");
        untxt2.setText("");
        passtxt2.setText("");
        search2.setText("Search Username");
        search2.setForeground(new Color(153,153,153));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        boolean isnumeric = true;
        isnumeric = idtxt.getText().matches("-?\\d+?");
        if(isnumeric){
            float idposi = Float.parseFloat(idtxt.getText());
            if(idposi>0){
        String sql = "INSERT INTO adminlogin"
                +"(id, username, password)"
                +"VALUES (?,?,?)";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos", "root", "");
            pst = con.prepareStatement(sql);
            pst.setString(1, idtxt.getText());
            pst.setString(2, untxt.getText());
            pst.setString(3, passtxt.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Save Successfull!");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex + "\nPlease check your input(ID must be a positive integer and must not be duplicated)");
        }}
            else{
                JOptionPane.showMessageDialog(null,  "\nPlease check your input(ID must be a positive integer and must not be duplicated)");
            }
        }else{
            JOptionPane.showMessageDialog(null,  "\nPlease check your input(ID must be a positive integer and must not be duplicated)");
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        boolean isnumeric = true;
        isnumeric = idtxt2.getText().matches("-?\\d+?");
        if(isnumeric){
            float idposi = Float.parseFloat(idtxt2.getText());
            if(idposi>0){
        String sql = "INSERT INTO stafflogin"
                +"(id, username, password)"
                +"VALUES (?,?,?)";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos", "root", "");
            pst = con.prepareStatement(sql);
            pst.setString(1, idtxt2.getText());
            pst.setString(2, untxt2.getText());
            pst.setString(3, passtxt2.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Save Successfull!");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex + "\nPlease check your input(ID must be a positive integer and must not be duplicated)");
        }}
            else{
                JOptionPane.showMessageDialog(null,  "\nPlease check your input(ID must be a positive integer and must not be duplicated)");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,  "\nPlease check your input(ID must be a positive integer and must not be duplicated)");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String sql = "UPDATE adminlogin SET username=?,password=? WHERE id=?";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos", "root", "");
            pst = con.prepareStatement(sql);
            pst.setString(3, idtxt.getText());
            pst.setString(1, untxt.getText());
            pst.setString(2, passtxt.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Update Successfull!");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex + "\nPlease check your input");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String sql = "UPDATE stafflogin SET username=?,password=? WHERE id=?";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos", "root", "");
            pst = con.prepareStatement(sql);
            pst.setString(3, idtxt2.getText());
            pst.setString(1, untxt2.getText());
            pst.setString(2, passtxt2.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Update Successfull!");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex + "\nPlease check your input");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String sql = "DELETE FROM adminlogin WHERE id = ?";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos", "root", "");
            pst = con.prepareStatement(sql);
            pst.setString(1, idtxt.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Delete Successfull!");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String sql = "DELETE FROM stafflogin WHERE id = ?";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos", "root", "");
            pst = con.prepareStatement(sql);
            pst.setString(1, idtxt2.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Delete Successfull!");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String select = jComboBox1.getSelectedItem().toString();
        if(select.equals("ID"))
        {
            jTable1.setModel(new DefaultTableModel());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            Statement st = con.createStatement();
            String query = "select * from adminlogin order by id";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            st.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else if(select.equals("Username"))
        {
            jTable1.setModel(new DefaultTableModel());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            Statement st = con.createStatement();
            String query = "select * from adminlogin order by username";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            st.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String select = jComboBox2.getSelectedItem().toString();
        if(select.equals("ID"))
        {
            jTable2.setModel(new DefaultTableModel());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            Statement st = con.createStatement();
            String query = "select * from stafflogin order by id";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            st.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else if(select.equals("Username"))
        {
            jTable2.setModel(new DefaultTableModel());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            Statement st = con.createStatement();
            String query = "select * from stafflogin order by username";
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            st.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login_staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        new Pos_admin().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        
        idtxt.setText(model.getValueAt(selectedRowIndex, 0).toString());
        untxt.setText(model.getValueAt(selectedRowIndex, 1).toString());
        passtxt.setText(model.getValueAt(selectedRowIndex, 2).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        int selectedRowIndex = jTable2.getSelectedRow();
        
        idtxt2.setText(model.getValueAt(selectedRowIndex, 0).toString());
        untxt2.setText(model.getValueAt(selectedRowIndex, 1).toString());
        passtxt2.setText(model.getValueAt(selectedRowIndex, 2).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained
        // TODO add your handling code here:
         if(search.getText().equals("Search Username")){
            search.setText("");
            search.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_searchFocusGained

    private void search2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_search2FocusGained
        // TODO add your handling code here:
         if(search2.getText().equals("Search Username")){
            search2.setText("");
            search2.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_search2FocusGained

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        // TODO add your handling code here:
         jTable1.setModel(new DefaultTableModel());
        String searching = search.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            String sql = "SELECT * from adminlogin where username like ?";
            pst = con.prepareStatement(sql);
            pst.setString(1, "%" + searching + "%");
            rs = pst.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            rs.close();
            pst.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Pos_admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchKeyPressed

    private void search2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search2KeyPressed
        // TODO add your handling code here:
        jTable2.setModel(new DefaultTableModel());
        String searching = search2.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/salespos","root","");
            String sql = "SELECT * from stafflogin where username like ?";
            pst = con.prepareStatement(sql);
            pst.setString(1, "%" + searching + "%");
            rs = pst.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i = 0; i<cols; i++)

            colName[i] = rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            

            String id, username, password;
            while(rs.next())
            {
                id = rs.getString(1);
                username = rs.getString(2);
                password = rs.getString(3);
                String[] row = {id, username, password};
                model.addRow(row);
            }
            rs.close();
            pst.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Pos_admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_search2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_accs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_accs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_accs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_accs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manage_accs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JTextField idtxt;
    private javax.swing.JTextField idtxt2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField passtxt;
    private javax.swing.JTextField passtxt2;
    private javax.swing.JTextField search;
    private javax.swing.JTextField search2;
    private javax.swing.JTextField untxt;
    private javax.swing.JTextField untxt2;
    // End of variables declaration//GEN-END:variables
}
